{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/EmployeeRow.js","components/TableHeadings.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","boxShadow","backgroundColor","borderBottom","borderColor","fontFamily","Header","className","style","fontSize","color","class","SearchBar","props","height","type","placeholder","marginTop","borderStyle","value","onChange","findEmployee","name","EmployeeRow","index","id","alt","src","img","phone","email","dob","headingStyle","marginBottom","TableHeadings","cursor","onClick","sortByName","axios","get","App","state","search","results","filteredResults","sort","originalResults","event","console","log","target","setState","filter","emp","first","toLowerCase","includes","last","slice","a","b","API","then","res","data","this","margin","map","i","picture","thumbnail","moment","date","ISO_8601","format","key","login","uuid","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.93668699.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst headerStyle = {\r\n    boxShadow: \"6px 6px 6px #333\", \r\n    backgroundColor: \"#111754\", \r\n    borderBottom: \"5px solid\", \r\n    borderColor:\"#9B182E\", \r\n    fontFamily: \"Cambria, Cochin, Georgia, Times, 'Times New Roman', serif\"\r\n}\r\n\r\nfunction Header(){\r\n    return(\r\n        <>\r\n        <nav className=\"navbar navbar-light d-flex justify-content-center flex-column\" style={headerStyle}>\r\n        <span className=\"navbar-brand h1\" style={{fontSize: \"2rem\", color: \"white\"}}>Employee Directory  <i class=\"far fa-address-book\"></i></span>\r\n        <p className=\"nav-item\">\r\n                <p className=\"nav-link text-white\" style={{fontSize: \"1rem\", fontFamily: \"Arial, Helvetica, sans-serif\"}}>Click 'Name' column to sort by name (click back to restore), OR, use the search box to narrow your results.</p>\r\n        </p>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction SearchBar(props){\r\n    return (\r\n        <>\r\n        <div className=\"row justify-content-center bg-light\" style={{height: \"5rem\"}}>\r\n            <div className=\"col-4\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <input \r\n                        type=\"text\" className=\"form-control align-middle\"\r\n                        placeholder=\"Search by first or last name\" \r\n                        style={{marginTop: \"13px\", borderStyle: \"solid\", borderColor: \"#111754\"}}\r\n                        value={props.value}\r\n                        onChange={props.findEmployee}\r\n                        name=\"search\"\r\n                    >\r\n                    </input>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport \"../Row.css\"\r\n\r\nfunction EmployeeRow(props){\r\n    return(\r\n        <div className=\"row text-center rowStyleEven\" style={props.index % 2 === 0 ? {backgroundColor: \"#F0F0F0\"} : {backgroundColor: \"aliceblue\"}} id=\"employeeRowDiv\">\r\n            <div className=\"col-2\" id=\"imageDiv\" style={{marginTop:\"6px\"}}>\r\n               <img alt=\"\" src={props.img}></img>\r\n            </div>\r\n\r\n            <div className=\"col-2\" style={{marginTop:\"10px\"}} id=\"nameDiv\">\r\n                {props.name}\r\n            </div>\r\n\r\n            <div className=\"col-2\" style={{marginTop:\"12px\"}} id=\"phoneDiv\">\r\n                {props.phone}\r\n            </div>\r\n\r\n            <div className=\"col-4\" style={{marginTop:\"12px\"}} id=\"emailDiv\">\r\n                {props.email}\r\n            </div>\r\n\r\n            <div className=\"col-2\" style={{marginTop:\"12px\"}} id=\"dobDiv\">\r\n                {props.dob}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeRow;","import React from 'react';\r\n\r\nconst headingStyle = {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n    fontSize: \"1.5rem\",\r\n    color: \"#111754\"\r\n}\r\n\r\nfunction TableHeadings(props){\r\n    return(\r\n        <div className=\"row border font-weight-bold text-center\" style={headingStyle}>\r\n            <div className=\"col-2\">\r\n                Image\r\n            </div>\r\n\r\n            <div className=\"col-2\" style={{cursor: \"pointer\"}} onClick={props.sortByName}>\r\n                Name\r\n            </div>\r\n\r\n            <div className=\"col-2\">\r\n                Phone Number\r\n            </div>\r\n\r\n            <div className=\"col-4\">\r\n                E-mail\r\n            </div>\r\n\r\n            <div className=\"col-2\">\r\n                DOB\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableHeadings;","import axios from 'axios';\r\n\r\nexport default {\r\n    getEmployees : () => {\r\n        return axios.get(\"https://randomuser.me/api/?results=20\");\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport EmployeeRow from './components/EmployeeRow';\nimport TableHeadings from './components/TableHeadings';\nimport API from './utils/API';\nimport moment from 'moment';\n\nclass App extends Component {\n  \n  state = {\n    search : \"\",\n    results: [],\n    filteredResults: [],\n    sort: false\n  }\n\n  originalResults = [];\n\n  componentDidMount(){\n    API.getEmployees()\n      .then(res => {\n        console.log(res);\n        this.setState({results: res.data.results});\n        console.log(this.state.results);\n        this.originalResults = res.data.results;\n      })\n  }\n\n  findEmployee = event => {\n    console.log(\"fired\");\n\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(value);\n\n    this.setState({\n      [name] : value\n    }, () => {\n      this.setState({\n        filteredResults: this.state.results.filter(emp => emp.name.first.toLowerCase().includes(this.state.search.toLowerCase()) || emp.name.last.toLowerCase().includes(this.state.search.toLowerCase()))\n      })\n  \n    })\n  }\n\n  sortByName = (event) => {\n    this.setState({\n      sort: !this.state.sort\n    }, () => {\n\n      if(this.state.sort){\n        this.setState({\n          results: this.state.results.slice().sort((a,b)=> (a.name.first > b.name.first ? 1 : -1))\n        })\n      }\n      else{\n        this.setState({\n          results: this.originalResults\n        })\n      }\n    })\n}\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <Header />\n        <SearchBar findEmployee={this.findEmployee} value={this.state.search}/>\n        <div className=\"container-fluid\" style={{margin: \"10px\"}}>\n          <TableHeadings sortByName={this.sortByName} sort={this.state.sort}/>\n\n        {\n          this.state.search === \"\" ?\n            this.state.results.map((emp,i) => (\n                <EmployeeRow img={emp.picture.thumbnail} name={`${emp.name.first} ${emp.name.last}`} phone={emp.phone} email={emp.email} dob={moment(emp.dob.date, moment.ISO_8601).format(\"MM-DD-YYYY\")} key= {emp.login.uuid} index={i}/>\n            )) : \n\n            this.state.filteredResults.map((emp,i) => (\n              <EmployeeRow img={emp.picture.thumbnail} name={`${emp.name.first} ${emp.name.last}`} phone={emp.phone} email={emp.email} dob={moment(emp.dob.date, moment.ISO_8601).format(\"MM-DD-YYYY\")} key= {emp.login.uuid} index={i}/>\n          ))\n          \n        }\n          \n        </div>\n      </div>\n    )\n  }\n}\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}